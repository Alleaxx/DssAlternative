@page "/relation-edit"
@inherits DSSProject
@layout EditorLayout

@if (Project.Created && !Project.IsEmpty)
{
    <div class="relations-grid">
        <section class="criterias">
            <div class="criterias-list">
                @foreach (var criteriaGroup in Relations.Where(r => r.Any()).GroupBy(r => r.Key.Level).OrderBy(g => g.Key))
                {
                    <div class="category-header">
                        <span style="color:gray">Ур. @criteriaGroup.Key - </span>
                        <span>@criteriaGroup.First().Nodes.First().LevelName()</span>
                    </div>
                    <div class="text-center">
                        <span class="progress-text">
                            @criteriaGroup.ProgressNow() / @criteriaGroup.ProgressMax()
                        </span>
                        <div class="progress medium" style="width:@criteriaGroup.Progress()%; background-color:lightgreen"></div>
                    </div>
                    @foreach (var criteria in criteriaGroup)
                    {
                        <a class="criteria @criteria.CssSelected(RelationActive) @criteria.CssColorClass()" role="button" @onclick="() => SetNow(criteria.FirstRequired)" title="@criteria.SymbolTooltip()">
                            <span class="criteria-char">
                                @criteria.Symbol()
                            </span>
                            <div class="criteria-right">
                                <div class="criteria-info">
                                    <span class="criteria-name">
                                        @criteria.Key.Name
                                    </span>
                                </div>
                                <div class="progress light" style="width:@criteria.Progress()%; background-color:@criteria.CssColor()"></div>
                            </div>
                        </a>
                        if (RelationActive.Main == criteria.Key)
                        {
                            <div class="local-relations">
                                <NodeRelations Node="RelationActive.Main" Context="rel" ShowState="false" ShowHeader="false">
                                    <RelationView>
                                        <span>@rel.From.Name - @rel.To.Name</span>
                                    </RelationView>
                                </NodeRelations>
                            </div>
                        }
                    }

                }
            </div>

            <div style="margin:25px">
            </div>
            <div class="progress-total-text" hidden>
                <div>
                    <span style="color: dimgray; margin: 4px">
                        Заполненность: @(Math.Round(Relations.NowProgress() / Relations.AllProgress() * 100))%
                    </span>
                </div>
                <div class="progress" style="width:@(Math.Round(Relations.NowProgress() / Relations.AllProgress() * 100))%; background-color:@Relations.CssColor()"></div>
            </div>
        </section>
        <section class="relation-area">
            <Tab>
                <TabItem>
                    <Title>
                        <h4 class="tab-header">Выбор приоритета</h4>
                    </Title>
                    <ChildContent>
                        <RelationQuestion Relation="@RelationActive" />
                    </ChildContent>
                </TabItem>
                <TabItem>
                    <Title>
                        <h4 class="tab-header">Матрица отношений</h4>
                    </Title>
                    <ChildContent>
                        <NodeMatrix Node="@RelationActive.Main" />
                    </ChildContent>
                </TabItem>
            </Tab>



            <div class="prev-next-stages">
                <a class="prev" @onclick="SetPrev" role="button">
                    ← назад
                </a>
                <a class="next" @onclick="SetNext" role="button">
                    вперед →
                </a>
            </div>
            @if (Project.Relations.Correct)
            {
                <div class="prev-next-stages">
                    <a class="prev" href="@ResultsLink">
                        Доступен результат!
                    </a>
                </div>
            }



        </section>

    </div>
}


@code {
    protected INodeRelation Prev => Relations.PrevRequiredRel(RelationActive);
    protected INodeRelation Next => Relations.NextRequiredRel(RelationActive);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Project.OnRelationChanged += OnRelationChanged;
    }
    private void OnRelationChanged()
    {
        StateHasChanged();
    }

    private void SetNext()
    {
        SetNow(Next);
    }
    private void SetPrev()
    {
        SetNow(Prev);
    }



}
