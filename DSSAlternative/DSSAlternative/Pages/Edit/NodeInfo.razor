@page "/node"
@inherits DSSProject
@layout EditorLayout

<div>
    <section class="row">
        <section class="navigation">
            <h3>Схема иерархии</h3>
            <div>
                <HierShemeBig ProjectSheme="Project" LinkType="@NodeLink"></HierShemeBig>
            </div>
        </section>
        <section class="edit">
            <h3>Редактирование элемента</h3>
            Категория: <i>@Node.LevelName()</i>
                       <dl>
                           <dt>
                               <label for="nodename">
                                   Название:
                               </label>
                           </dt>
                           <dd>
                               <input id="nodename" type="text" style="width:20em" @bind-value="@Node.Name" />
                           </dd>
                           <dt>
                               <label for="nodedescr">
                                   Краткое описание:
                               </label>
                           </dt>
                           <dd>
                               <input id="nodedescr" type="text" style="width:25em" @bind-value="@Node.Description" />
                           </dd>
                           <dt>
                               <label for="nodedescr">
                                   Изображение:
                               </label>
                           </dt>
                           <dd>
                               <div style="display: flex; align-items: center">
                                   @if (!string.IsNullOrEmpty(Node.ImgPath))
                                   {
                                       <img src="Images/@Node.ImgPath" style="width:24px; margin-right: 5px;" />
                                   }
                               <select id="nodedescr" @bind="@Node.ImgPath">
                                   <option value="">Нет</option>
                                   <option value="settings.svg">Настройки</option>
                                   <option value="user.svg">Пользователь</option>
                                   <option value="bar-chart.svg">Гистограмма</option>
                                   <option value="check.svg">Галочка</option>
                                   <option value="bookmark.svg">Закладка</option>
                                   <option value="clipboard.svg">Планшет</option>
                                   <option value="download.svg">Загрузка</option>
                                   <option value="save.svg">Сохранить</option>
                                   <option value="layers.svg">Слои</option>
                                   <option value="list.svg">Список</option>
                                   <option value="plus-square.svg">Плюс</option>
                                   <option value="share-2.svg">Связь</option>
                                   <option value="sidebar.svg">Макет</option>
                               </select>
                               </div>
                           </dd>
                           <dt>Итоговый коэффициент:</dt>
                           <dd>
                               <span>
                                   @FormatNumber(Node.Coefficient)
                               </span>
                           </dd>
                           @*<dt>Согласованность (Cr):</dt>
        <dd>
            <span>
                @FormatNumber(Cr)
            </span>
        </dd>*@
                           @if (HasRelations())
                           {
                               <dt>
                                   <span>
                                       Отношения:
                                   </span>
                                   <NodeRelations Node="Node" Context="rel" ShowHeader="false">
                                       <RelationView>
                                           <span>@rel.From.Name - @rel.To.Name</span>
                                       </RelationView>
                                   </NodeRelations>
                               </dt>
                               <dd>
                                   <div class="actions-section">
                                       <button class="action clear-relations" href="@NodeLink" @onclick="ClearRelations">
                                           <span class="action-name">Сбросить все отношения</span>
                                           <img class="action-icon" src="Images/settings.svg" />
                                       </button>
                                   </div>
                               </dd>
                               <dt>Матрица отношений:</dt>
                               <dd>
                                   <NodeMatrix Node="@Node" />
                               </dd>
                           }
                       </dl>
        </section>
    </section>
</div>


@code {
    public INode Node => Project.NodeSelected;
    public double Cr => Node.Cr(Project);

    private IEnumerable<INodeRelation> RelationsOwned()
    {
        return Node.OwnedRelations(Project);
    }
    private bool HasRelations()
    {
        return RelationsOwned().Any();
    }



    protected override void OnInitialized()
    {
        base.OnInitialized();
        Project.OnNodeChanged += () => StateHasChanged();
    }


    private string GetEmPadding(KeyValuePair<int, INode[]> group)
    {
        int level = group.Key;
        return ((double)level / 2).ToString().Replace(',', '.');
    }
    private string Name(KeyValuePair<int, INode[]> group)
    {
        int level = group.Key;
        string firstNode = group.Value.First().LevelName();
        return $"{firstNode} ({level})";
    }

    private void ClearRelations()
    {
        Relations[Node].SetUnknown();
    }

}