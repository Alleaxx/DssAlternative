@inherits DSSComponentParamRelation
@if (AsCell)
{
    <td colspan="@ColSpan" title="@Rating.Value" class="@CssClass" @onclick="Set">
        <div class="rating">
            <span>
                @if (IsSelected)
                {
                    <input type="checkbox" checked />
                }
                else
                {
                    <input type="checkbox" />
                }

                <span style="@CssStyle">
                    @Name()
                </span>
                <span class="cr">
                    @CrDelta()
                </span>
            </span>
        </div>
    </td>
}
else
{
    <div style="flex:1;padding:2px 8px;text-align:center" title="@CrDelta()" @onclick="Set">
        @Rating.Value
    </div>
}

@code {
    [CascadingParameter]
    public Dictionary<IRating, IMatrix> RatingMatrix { get; set; }

    [Parameter]
    public INode Node { get; set; }
    [Parameter]
    public int ColSpan { get; set; }
    [Parameter]
    public IRating Rating { get; set; }
    [Parameter]
    public bool AsCell { get; set; } = true;

    public bool IsSelected { get; set; }

    private ICss Css { get; set; }
    private string CssClass => Css.CssClass();
    private string CssStyle => Css.CssStyle();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        IsSelected = Relation.Rating.CheckEqual(Rating)
                || ((Relation.Value == 1 || Relation.Value == 0) && Relation.Value == Rating.Value);
        Css = new CssRating(RatingMatrix, Relation, Rating);
    }

    public string Name()
    {
        return RatingCssSystem.DefaultSystem.GetRuleForRating(Rating).Name;
    }
    private void Set()
    {
        Relation.SetRating(Rating);
    }

    public string CrDelta()
    {
        if (RatingMatrix.ContainsKey(Rating))
        {
            return double.IsInfinity(RatingMatrix[Rating].Cr) ? "~" : double.IsNaN(RatingMatrix[Rating].Cr) ? "~" : Math.Abs(RatingMatrix[Rating].Cr).ToString("0.00");
        }
        return "-";
    }
}
