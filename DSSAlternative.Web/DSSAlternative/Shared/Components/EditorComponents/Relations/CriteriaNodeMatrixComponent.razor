@inherits DSSComponentRelationV2

@*
    Компонент матрицы отношений для указанного критерия
*@

<div>
    @if (Criteria.HasChildCompares())
    {
        <div class="mtx-area">
            <div class="mtx">
                <table>
                    <tbody>
                        <tr>
                            <td class="cell-header cell-state @(IsCorrectMtx() ? "good-mtx" : "bad-mtx")" title="@Criteria.Symbol().tooltip">
                                <h4><b>@Criteria.Symbol().symbol</b></h4> 
                            </td>
                            <td class="cell-header" colspan="@(NodesCount())">
                                <div>
                                    <h4>
                                        <b>@Criteria.NodeMain.Name</b>  
                                    </h4>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="cell-node" title="Показатель согласованности. Граница согласованности - @MtxConsistency.BorderDefault">
                                Cr: @Mtx.Cr.ToString("0.00")
                            </td>
                            @foreach (var node in Criteria.NodesControlled)
                            {
                                <td class="cell-node">
                                    <span>
                                        @node.Name
                                    </span>
                                </td>
                            }
                        </tr>
                        @foreach (var node in Criteria.MtxView)
                        {
                            <tr>
                                <td class="cell-node">
                                    <span>
                                        @node.Key.Name
                                    </span>
                                </td>
                                @foreach (var relation in node)
                                {
                                    <td class="cell-value @CssExtensions.GetRelationNodeCssClasses(Project, relation, Mtx)" title="@relation.Value">
                                        <input disabled="@Disabled(relation)" type="text" @bind-value="@relation.ValueRounded" @onfocus="@(() => Project.SelectNodeRelation(relation))" />
                                    </td>
                                }
                            </tr>
                        }


                        <tr>
                            <td class="cell-header-more-info" colspan="@(NodesCount() + 1)">
                                <label for="moredetails">Подробные расчеты</label>
                                <input id="moredetails" type="checkbox" @bind-value="@ShowDetails">
                            </td>
                        </tr>
                        @if (ShowDetails)
                        {
                            <tr>
                                <td class="cell-property-name">
                                    <span>nmax</span>
                                </td>
                                <td class="cell-property-value" colspan="@(NodesCount())">
                                    @Mtx.Array.Nmax()
                                </td>
                            </tr>
                            <tr>
                                <td class="cell-property-name">
                                    <span>CI</span>
                                </td>
                                <td class="cell-property-value" colspan="@(NodesCount())">
                                    @Mtx.Array.CI()
                                </td>
                            </tr>
                            <tr>
                                <td class="cell-property-name">
                                    <span>RI</span>
                                </td>
                                <td class="cell-property-value" colspan="@(NodesCount())">
                                    @Mtx.Array.RI()
                                </td>
                            </tr>
                            <tr>
                                <td class="cell-property-name">
                                    <span>CR</span>
                                </td>
                                <td class="cell-property-value"  colspan="@(NodesCount())">
                                    @Mtx.Array.Cr()
                                </td>
                            </tr>
                            <tr>
                                <td class="cell-property-name">
                                    <span title="Локальные коэффициенты">Вектор 1</span>
                                </td>
                                @foreach (var coeff in Mtx.Coeffiients)
                                {
                                    <td class="cell-property-value">
                                        <span>@coeff</span>
                                    </td>
                                }
                            </tr>
                            <tr>
                                <td class="cell-property-name">
                                    <span title="Вектор произведения матрицы отношений и локальных коэффициентов">Вектор 2</span>
                                </td>
                                @foreach (var coeff in Mtx.Array.MultiMatrixLocalCoeffs())
                                {
                                    <td class="cell-property-value">
                                        <span>@coeff</span>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <p>Матрица для данного критерия пуста</p>
    }

</div>

@code {
    public IRelationsCriteria Criteria => Relation.CriteriaContext;
    private IMatrix Mtx => Criteria.Mtx;

    [Parameter]
    public IEnumerable<IRelationNode> AllowedRelations { get; set; }

    private static bool ShowDetails { get; set; } = false;

    private bool IsCorrectMtx()
    {
        return Mtx.IsCorrect;
    }
    private int NodesCount()
    {
        return Criteria.NodesControlled.Count();
    }

    private bool Disabled(IRelationNode relation)
    {
        if (AllowedRelations != null && !AllowedRelations.Contains(relation))
        {
            return true;
        }
        if (relation.Self)
        {
            return true;
        }
        return false;
    }
}
