@inherits DSSComponentProjectV2

<div class="status-bar">
    <div class="status-bar-info">
        @if (Project.IsUpdateAvailable)
        {
            @if (!Project.IsActiveHierCreated)
            {
                <input class="add" type="button" value="Утвердить созданную иерархию" @onclick="UpdateHierarchy" />
            }
            else
            {
                <span class="not-saved">@HierStateInfo[HierComparison.State]</span>
                <input class="add" type="button" value="Подтвердить новую иерархию" @onclick="UpdateHierarchy" />
                <input class="cancel" type="button" value="Отменить изменения" @onclick="CancelHierarchyChanges" />
                @if (Project.IsActiveHierCreated)
                {
                    @if (HierComparison.State == CompareHierState.StructureFieldsChanges || HierComparison.State == CompareHierState.CollectionChanges)
                    {
                        <ul class="fails">
                            <li>
                                <span>
                                    Все отношения будут сброшены!
                                </span>
                            </li>
                        </ul>
                    }
                }
            }
        }
        else if (Project.UnsavedChanged && !Project.IsUpdateAvailable)
        {
            <span class="warning">В структуре иерархии обнаружены ошибки:</span>
            <input class="cancel" type="button" value="Отменить изменения" @onclick="CancelHierarchyChanges" />
            <ul class="fails">
                @foreach (var check in HierarchyEditing.Correctness.GetChecksByState(CheckState.Warning))
                {
                    <li>
                        <span>
                            @check.Message
                        </span>
                    </li>
                }
                @foreach (var check in HierarchyEditing.Correctness.GetChecksByState(CheckState.Error))
                {
                    <li>
                        <span>
                            @check.Message
                        </span>
                    </li>
                }
            </ul>
        }
        else
        {
            <span class="all-saved">Все изменения сохранены</span>
        }
    </div>
    <div class="status-bar-properties">
        <div>
            <span class="property-name">Уровней: </span>
            <span class="property-value">@HierarchyEditing.LevelsCount</span>
        </div>
        <div>
            <span class="property-name">Узлов: </span>
            <span class="property-value">@HierarchyEditing.Nodes.Count()</span>
        </div>
    </div>
</div>

@code {
    private ComparisonHierarchy HierComparison => Project.NodeMap.GetState(Project);
    private Dictionary<CompareHierState, string> HierStateInfo = new Dictionary<CompareHierState, string>()
    {
        [CompareHierState.CollectionChanges] = "Есть несохраненные изменения в структуре и составе",
        [CompareHierState.StructureFieldsChanges] = "Есть несохраненные изменения в структуре",
        [CompareHierState.MinorFieldsChanges] = "Есть несохраненные незначительные изменения",
        [CompareHierState.NoChanges] = "В иерархии нет изменений",
    };

    //Подтверждение иерархии
    private void UpdateHierarchy()
    {
        StateHasChanged();
        Project.SetActiveHierarchyAsEditing();
    }
    private void CancelHierarchyChanges()
    {
        Project.SetEditingHierarchyAsActive();
    }
}
